@model WebApp.Web.Models.UserScore
@{
    var scoreList = new List<UserScore>();
    scoreList.Add(new UserScore
    {
        CurrentDate = DateTime.Now.ToShortDateString(),
        Score = 2
    });
    scoreList.Add(new UserScore
    {
        CurrentDate = new DateTime(2019, 8, 7).ToShortDateString(),
        Score = 5
    });
    scoreList.Add(new UserScore
    {
        CurrentDate = new DateTime(2019, 8, 8).ToShortDateString(),
        Score = 5
    });
    scoreList.Add(new UserScore
    {
        CurrentDate = new DateTime(2019, 8, 9).ToShortDateString(),
        Score = 2
    });

    double avgScore = 0.0;
    byte count = 0;
    string avg = "";

    foreach (var item in scoreList)
    {
        avgScore += item.Score;
        count++;
    }

    avgScore /= count;
    avg = String.Format("{0:0.00}", avgScore);

    var XValues = Newtonsoft.Json.JsonConvert.SerializeObject(scoreList.Select(x => x.CurrentDate).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(scoreList.Select(x => x.Score).ToList());
}

<div class="box-body">
    <div class="chart-container">
        <canvas id="chart" style="width:100%; height:500px"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script type="text/javascript">

        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XValues),
                datasets: [{
                    label: "Average Score: @avg",
                    backgroundColor: [
                        'rgba(0, 0, 255, 0.2)',
                        'rgba(1, 1, 255, 0.2)',
                        'rgba(2, 2, 255, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(0,0,0,1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0)',
                        'rgba(0, 0, 0)',
                        'rgba(0, 0, 0)',
                        'rgba(0, 0, 0)',
                        'rgba(0, 0, 0)',
                        'rgba(0, 0, 0)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(0,0,255,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'line'

            });
        });
</script>
